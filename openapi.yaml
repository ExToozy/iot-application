openapi: 3.0.1

info:
  title: OpenAPI definition
  version: v0

servers:
  - url: http://localhost:8080
    description: Server url

paths:
  /api/v1/auth/login:
    post:
      tags:
        - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /api/v1/auth/register:
    post:
      tags:
        - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /api/v1/auth/refresh:
    post:
      tags:
        - auth-controller
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /api/v1/sensors/register:
    post:
      tags:
        - sensor-controller
      operationId: registerSensor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensorDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SensorDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /api/v1/measurements/add:
    post:
      tags:
        - measurement-controller
      operationId: createMeasurement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeasurementDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /api/v1/measurements:
    get:
      tags:
        - measurement-controller
      operationId: getMeasurements
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeasurementDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'

  /api/v1/measurements/rainyDaysCount:
    get:
      tags:
        - measurement-controller
      operationId: getRainyDaysCount
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'

components:
  schemas:

    ErrorDto:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string

    SensorDto:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    MeasurementDto:
      required:
        - raining
        - sensor
        - value
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: number
          format: double
        raining:
          type: boolean
        sensor:
          $ref: '#/components/schemas/SensorDto'

    UserDto:
      required:
        - password
        - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
          writeOnly: true

    RefreshTokenDto:
      required:
        - refreshToken
      type: object
      properties:
        refreshToken:
          type: string

    LoginResponseDto:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string